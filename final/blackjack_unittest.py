#Homework 2, CS-491, Christopher Eichstedt

import unittest
import card as user_card
import hand as user_hand
import deck as user_deck

class TestCard(unittest.TestCase):
    def test_value(self):
        #Hearts
        test_card = user_card.Card("Hearts","Two")
        self.assertEqual(test_card.rank, "Two")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Three")
        self.assertEqual(test_card.rank, "Three")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Four")
        self.assertEqual(test_card.rank, "Four")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Five")
        self.assertEqual(test_card.rank, "Five")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Six")
        self.assertEqual(test_card.rank, "Six")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Seven")
        self.assertEqual(test_card.rank, "Seven")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Eight")
        self.assertEqual(test_card.rank, "Eight")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Nine")
        self.assertEqual(test_card.rank, "Nine")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Ten")
        self.assertEqual(test_card.rank, "Ten")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Jack")
        self.assertEqual(test_card.rank, "Jack")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Queen")
        self.assertEqual(test_card.rank, "Queen")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","King")
        self.assertEqual(test_card.rank, "King")
        self.assertEqual(test_card.suit, "Hearts")
        test_card = user_card.Card("Hearts","Ace")
        self.assertEqual(test_card.rank, "Ace")
        self.assertEqual(test_card.suit, "Hearts")
        #Diamonds
        test_card = user_card.Card("Diamonds","Two")
        self.assertEqual(test_card.rank, "Two")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Three")
        self.assertEqual(test_card.rank, "Three")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Four")
        self.assertEqual(test_card.rank, "Four")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Five")
        self.assertEqual(test_card.rank, "Five")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Six")
        self.assertEqual(test_card.rank, "Six")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Seven")
        self.assertEqual(test_card.rank, "Seven")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Eight")
        self.assertEqual(test_card.rank, "Eight")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Nine")
        self.assertEqual(test_card.rank, "Nine")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Ten")
        self.assertEqual(test_card.rank, "Ten")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Jack")
        self.assertEqual(test_card.rank, "Jack")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Queen")
        self.assertEqual(test_card.rank, "Queen")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","King")
        self.assertEqual(test_card.rank, "King")
        self.assertEqual(test_card.suit, "Diamonds")
        test_card = user_card.Card("Diamonds","Ace")
        self.assertEqual(test_card.rank, "Ace")
        self.assertEqual(test_card.suit, "Diamonds")
        #Spades
        test_card = user_card.Card("Spades","Two")
        self.assertEqual(test_card.rank, "Two")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Three")
        self.assertEqual(test_card.rank, "Three")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Four")
        self.assertEqual(test_card.rank, "Four")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Five")
        self.assertEqual(test_card.rank, "Five")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Six")
        self.assertEqual(test_card.rank, "Six")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Seven")
        self.assertEqual(test_card.rank, "Seven")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Eight")
        self.assertEqual(test_card.rank, "Eight")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Nine")
        self.assertEqual(test_card.rank, "Nine")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Ten")
        self.assertEqual(test_card.rank, "Ten")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Jack")
        self.assertEqual(test_card.rank, "Jack")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Queen")
        self.assertEqual(test_card.rank, "Queen")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","King")
        self.assertEqual(test_card.rank, "King")
        self.assertEqual(test_card.suit, "Spades")
        test_card = user_card.Card("Spades","Ace")
        self.assertEqual(test_card.rank, "Ace")
        self.assertEqual(test_card.suit, "Spades")
        #Clubs
        test_card = user_card.Card("Clubs","Two")
        self.assertEqual(test_card.rank, "Two")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Three")
        self.assertEqual(test_card.rank, "Three")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Four")
        self.assertEqual(test_card.rank, "Four")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Five")
        self.assertEqual(test_card.rank, "Five")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Six")
        self.assertEqual(test_card.rank, "Six")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Seven")
        self.assertEqual(test_card.rank, "Seven")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Eight")
        self.assertEqual(test_card.rank, "Eight")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Nine")
        self.assertEqual(test_card.rank, "Nine")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Ten")
        self.assertEqual(test_card.rank, "Ten")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Jack")
        self.assertEqual(test_card.rank, "Jack")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Queen")
        self.assertEqual(test_card.rank, "Queen")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","King")
        self.assertEqual(test_card.rank, "King")
        self.assertEqual(test_card.suit, "Clubs")
        test_card = user_card.Card("Clubs","Ace")
        self.assertEqual(test_card.rank, "Ace")
        self.assertEqual(test_card.suit, "Clubs")

class TestDeck(unittest.TestCase):
    def test_size(self):
        test_deck = user_deck.Deck()
        self.assertEqual(len(test_deck.deck),52)

    def test_shuffle(self):
        test_deck1 = user_deck.Deck()
        test_deck1.shuffle()
        test_deck2 = user_deck.Deck()
        test_deck2.shuffle()
        self.assertNotEqual(str(test_deck1), str(test_deck2))

    def test_empty(self):
        test_deck = user_deck.Deck()
        while len(test_deck.deck) != 0:
            test_deck.deal()
        self.assertEqual(len(test_deck.deck),0)


class TestHand(unittest.TestCase):
    def test_value(self):
        test_hand = user_hand.Hand()
        test_card = user_card.Card("Hearts","Ace")
        test_hand.add_card(test_card)
        self.assertEqual(test_hand.value, 11)
        test_card = user_card.Card("Hearts","King")
        test_hand.add_card(test_card)
        self.assertEqual(test_hand.value, 21)

    def test_aces(self):
        test_hand = user_hand.Hand()
        while test_hand.adjust_for_ace():
            test_card = user_card.Card("Hearts","Ace")
            test_hand.add_card(test_card)
            test_card = user_card.Card("Diamonds","Ace")
            test_hand.add_card(test_card)
            test_card = user_card.Card("Spades","Ace")
            test_hand.add_card(test_card)
            test_card = user_card.Card("Clubs","Ace")
            test_hand.add_card(test_card)
            self.assertEqual(test_hand.value, 14)

if __name__ == '__main__':
    unittest.main() 